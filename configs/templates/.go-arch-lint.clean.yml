# üèóÔ∏è CLEAN ARCHITECTURE TEMPLATE
# Template for Clean Architecture pattern
# Customize paths to match your project structure

version: 3
workdir: .

allow:
  depOnAnyVendor: true

# Clean Architecture Components
components:
  # Domain Layer - Pure Business Logic
  domain-entities:
    in: internal/domain/entities/**
  domain-services:  
    in: internal/domain/services/**
  domain-repositories:
    in: internal/domain/repositories/**
  domain-shared:
    in: internal/domain/shared/**
    
  # Application Layer - Use Cases  
  app-handlers:
    in: internal/application/handlers/**
  app-services:
    in: internal/application/services/**
    
  # Infrastructure Layer - External Concerns
  infrastructure:
    in: internal/infrastructure/**
    
  # Configuration & Main
  config:
    in: internal/config/**
  main:
    in: cmd/**

# Clean Architecture Dependencies
deps:
  # Domain Layer - No external dependencies
  domain-entities:
    mayDependOn: [domain-shared]
    
  domain-services:
    mayDependOn: [domain-entities, domain-repositories, domain-shared]
    
  domain-repositories:
    mayDependOn: [domain-entities, domain-shared]
    
  domain-shared:
    mayDependOn: []
    
  # Application Layer - Orchestrates domain
  app-handlers:
    mayDependOn: [domain-entities, domain-services, domain-shared]
    
  app-services:
    mayDependOn: [domain-entities, domain-services, domain-repositories, domain-shared]
    
  # Infrastructure Layer - Implements interfaces
  infrastructure:
    mayDependOn: [domain-entities, domain-repositories, domain-shared]
    
  # Configuration & Main - Can depend on all
  config:
    anyVendorDeps: true
    mayDependOn: []
    
  main:
    anyProjectDeps: true

commonComponents:
  - domain-shared

exclude:
  - "**/*_test.go"
  - "**/vendor/**"
  - "**/.git/**"