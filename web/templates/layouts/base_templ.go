// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// BaseLayout provides the main HTML structure for all pages
func BaseLayout(title string, content templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/layouts/base.templ`, Line: 10, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - User Management System</title><!-- TailwindCSS CDN --><script src=\"https://cdn.tailwindcss.com\"></script><!-- HTMX CDN --><script src=\"https://unpkg.com/htmx.org@2.0.3\" integrity=\"sha384-0895/pl2MU10Hqc6jd4RvrthNlDiE9U1tWmX7WRESftEDRosgxNsQG/Ze9YMRzHq\" crossorigin=\"anonymous\"></script><!-- Heroicons for beautiful icons --><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/heroicons/2.0.18/index.min.css\"><!-- Custom Styles --><style>\n\t\t\t\t.loading {\n\t\t\t\t\t@apply opacity-50 pointer-events-none;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.htmx-indicator {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.htmx-request .htmx-indicator {\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.htmx-request.loading {\n\t\t\t\t\t@apply opacity-50;\n\t\t\t\t}\n\t\t\t</style></head><body class=\"bg-gray-50 min-h-screen\"><!-- Navigation -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Navigation().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Main Content --><main class=\"container mx-auto px-4 py-8\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</main><!-- Toast Container for notifications --><div id=\"toast-container\" class=\"fixed top-4 right-4 z-50 space-y-2\"></div><!-- Loading Indicator --><div id=\"loading-indicator\" class=\"htmx-indicator fixed top-4 left-1/2 transform -translate-x-1/2 bg-blue-500 text-white px-4 py-2 rounded-lg shadow-lg\"><div class=\"flex items-center space-x-2\"><svg class=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle> <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg> <span>Loading...</span></div></div><!-- HTMX Config --><script>\n\t\t\t\t// Global HTMX configuration\n\t\t\t\thtmx.config.defaultSwapStyle = 'outerHTML';\n\t\t\t\thtmx.config.defaultSwapDelay = 0;\n\t\t\t\thtmx.config.defaultSettleDelay = 20;\n\t\t\t\t\n\t\t\t\t// Custom HTMX event listeners\n\t\t\t\tdocument.body.addEventListener('htmx:beforeRequest', function(evt) {\n\t\t\t\t\tdocument.getElementById('loading-indicator').style.display = 'block';\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tdocument.body.addEventListener('htmx:afterRequest', function(evt) {\n\t\t\t\t\tdocument.getElementById('loading-indicator').style.display = 'none';\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Toast notification system\n\t\t\t\twindow.showToast = function(message, type = 'success') {\n\t\t\t\t\tconst toast = document.createElement('div');\n\t\t\t\t\ttoast.className = `toast px-4 py-2 rounded-lg shadow-lg text-white ${\n\t\t\t\t\t\ttype === 'success' ? 'bg-green-500' : \n\t\t\t\t\t\ttype === 'error' ? 'bg-red-500' : \n\t\t\t\t\t\ttype === 'warning' ? 'bg-yellow-500' : 'bg-blue-500'\n\t\t\t\t\t}`;\n\t\t\t\t\ttoast.textContent = message;\n\t\t\t\t\t\n\t\t\t\t\tdocument.getElementById('toast-container').appendChild(toast);\n\t\t\t\t\t\n\t\t\t\t\t// Auto remove after 3 seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\ttoast.remove();\n\t\t\t\t\t}, 3000);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// Handle successful HTMX responses\n\t\t\t\tdocument.body.addEventListener('htmx:afterSwap', function(evt) {\n\t\t\t\t\tif (evt.detail.xhr.status === 200 || evt.detail.xhr.status === 201) {\n\t\t\t\t\t\tconst action = evt.detail.elt.getAttribute('hx-post') ? 'created' : \n\t\t\t\t\t\t\t\t\t   evt.detail.elt.getAttribute('hx-put') ? 'updated' : \n\t\t\t\t\t\t\t\t\t   evt.detail.elt.getAttribute('hx-delete') ? 'deleted' : 'completed';\n\t\t\t\t\t\tif (action !== 'completed') {\n\t\t\t\t\t\t\tshowToast(`User ${action} successfully!`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Handle HTMX errors\n\t\t\t\tdocument.body.addEventListener('htmx:responseError', function(evt) {\n\t\t\t\t\tshowToast('An error occurred. Please try again.', 'error');\n\t\t\t\t});\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Navigation component for consistent navigation across pages
func Navigation() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<nav class=\"bg-white shadow-sm border-b border-gray-200\"><div class=\"container mx-auto px-4\"><div class=\"flex justify-between items-center h-16\"><!-- Logo/Brand --><div class=\"flex items-center space-x-4\"><h1 class=\"text-xl font-bold text-gray-900\">User Management</h1></div><!-- Navigation Links --><div class=\"hidden md:flex items-center space-x-8\"><a href=\"/users\" class=\"text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium transition-colors\">Users</a> <a href=\"/users/new\" class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors\">Add User</a></div><!-- Mobile menu button --><div class=\"md:hidden\"><button type=\"button\" class=\"text-gray-500 hover:text-gray-600 focus:outline-none focus:text-gray-600\" onclick=\"toggleMobileMenu()\"><svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg></button></div></div><!-- Mobile menu --><div id=\"mobile-menu\" class=\"hidden md:hidden pb-4\"><div class=\"space-y-1\"><a href=\"/users\" class=\"block text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-base font-medium\">Users</a> <a href=\"/users/new\" class=\"block bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md text-base font-medium\">Add User</a></div></div></div></nav><script>\n\t\tfunction toggleMobileMenu() {\n\t\t\tconst menu = document.getElementById('mobile-menu');\n\t\t\tmenu.classList.toggle('hidden');\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
