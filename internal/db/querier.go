//go:build sqlite3

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/LarsArtmann/template-arch-lint/internal/domain/values"
)

type Querier interface {
	//CountUsers
	//
	//  SELECT COUNT(*) FROM users
	CountUsers(ctx context.Context) (int64, error)
	//DeleteUser
	//
	//  DELETE FROM users WHERE id = ?
	DeleteUser(ctx context.Context, id values.UserID) error
	//FindUserByEmail
	//
	//  SELECT id, email, name, created, modified
	//  FROM users
	//  WHERE email = ?
	FindUserByEmail(ctx context.Context, email string) (*Users, error)
	//FindUserByID
	//
	//  SELECT id, email, name, created, modified
	//  FROM users
	//  WHERE id = ?
	FindUserByID(ctx context.Context, id values.UserID) (*Users, error)
	//ListUsers
	//
	//  SELECT id, email, name, created, modified
	//  FROM users
	//  ORDER BY created ASC
	ListUsers(ctx context.Context) ([]*Users, error)
	// Users CRUD queries
	// Matches the existing UserRepository interface methods
	//
	//
	//  INSERT OR REPLACE INTO users (id, email, name, created, modified)
	//  VALUES (?, ?, ?, ?, ?)
	SaveUser(ctx context.Context, arg *SaveUserParams) error
}

var _ Querier = (*Queries)(nil)
