# ðŸ”¥ ENTERPRISE-GRADE GO CODE QUALITY - SIMPLIFIED EXAMPLE
# Key linting rules from the main template

run:
  timeout: 5m
  go: '1.21'
  modules-download-mode: readonly

output:
  formats:
    - format: colored-line-number
      path: stdout
  print-issued-line: true
  print-linter-name: true
  uniq-by-line: false
  sort-results: true

linters-settings:
  # Function length limits
  funlen:
    lines: 50
    statements: 30

  # Cyclomatic complexity
  cyclop:
    max-complexity: 10
    package-average: 5.0

  # Line length
  lll:
    line-length: 120

  # Naming conventions
  goconst:
    min-len: 3
    min-occurrences: 3

  # Error handling
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(

linters:
  enable:
    # CRITICAL QUALITY LINTERS
    - errcheck         # Check for unchecked errors
    - gosimple         # Simplify code
    - govet            # Go vet
    - ineffassign      # Detect ineffectual assignments
    - staticcheck      # Go static analysis
    - typecheck        # Parse and type-check Go code
    - unused           # Check for unused variables/functions

    # CODE STYLE & FORMATTING
    - gofmt           # Check if code is gofmt-ed
    - gofumpt         # Stricter gofmt
    - goimports       # Fix imports

    # COMPLEXITY & MAINTAINABILITY
    - funlen          # Check function length
    - cyclop          # Check cyclomatic complexity
    - gocognit        # Compute cognitive complexity

    # ERROR HANDLING
    - wrapcheck       # Check that errors are wrapped
    - errorlint       # Find mismatches with error types

    # PERFORMANCE
    - prealloc        # Check for slice preallocation

    # NAMING & STYLE
    - goconst         # Find repeated strings that could be constants
    - misspell        # Find misspelled words

    # BEST PRACTICES
    - unconvert       # Remove unnecessary conversions
    - unparam         # Report unused function parameters

  disable:
    - godot           # Simplified for example

issues:
  max-issues-per-linter: 50
  max-same-issues: 10

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - funlen
        - cyclop
        - wrapcheck

    # Exclude main.go from some rules
    - path: cmd/
      linters:
        - funlen

  exclude:
    # Allow long lines in generated code
    - "Line contains TODO/BUG/FIXME"
