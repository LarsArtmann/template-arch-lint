# Storage Class for different environments
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: template-arch-lint-ssd
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    description: "SSD storage class for template-arch-lint"
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: kubernetes.io/aws-ebs  # AWS EBS provisioner (adjust for your cloud)
parameters:
  type: gp3                          # AWS EBS gp3 type
  fsType: ext4
  encrypted: "true"
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain

---
# Alternative storage class for local development
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: template-arch-lint-local
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    description: "Local storage class for development"
provisioner: kubernetes.io/no-provisioner  # For local/hostPath volumes
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete

---
# Persistent Volume Claim for SQLite database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: template-arch-lint-data
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    description: "Persistent storage for template-arch-lint database"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: template-arch-lint-ssd
  resources:
    requests:
      storage: 10Gi
  # Optional: Volume selector for pre-provisioned volumes
  # selector:
  #   matchLabels:
  #     app: template-arch-lint

---
# StatefulSet alternative for persistent data (if needed)
# Use this instead of Deployment if you need guaranteed persistent storage per replica
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: template-arch-lint-stateful
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint-stateful
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: statefulset
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    description: "StatefulSet for template-arch-lint with persistent storage"
    deployment.kubernetes.io/revision: "1"
spec:
  serviceName: template-arch-lint-headless
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: template-arch-lint-stateful
      app.kubernetes.io/instance: template-arch-lint
  template:
    metadata:
      labels:
        app.kubernetes.io/name: template-arch-lint-stateful
        app.kubernetes.io/instance: template-arch-lint
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: statefulset
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
    spec:
      # Same spec as Deployment but with persistent volumes
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      
      serviceAccountName: template-arch-lint
      
      containers:
      - name: template-arch-lint
        image: template-arch-lint:latest
        imagePullPolicy: IfNotPresent
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 2112
          protocol: TCP
        
        env:
        - name: APP_SERVER_HOST
          value: "0.0.0.0"
        - name: APP_SERVER_PORT
          value: "8080"
        - name: APP_DATABASE_DSN
          value: "/data/app.db"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        
        envFrom:
        - configMapRef:
            name: template-arch-lint-config
        - secretRef:
            name: template-arch-lint-secrets
            optional: true
        
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: data
          mountPath: /data
        - name: config
          mountPath: /etc/template-arch-lint
          readOnly: true
      
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: config
        configMap:
          name: template-arch-lint-config
          defaultMode: 0644
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: template-arch-lint-stateful
              topologyKey: kubernetes.io/hostname
      
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
  
  # Volume Claim Templates for StatefulSet
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: template-arch-lint-stateful
        app.kubernetes.io/component: storage
    spec:
      accessModes: 
      - ReadWriteOnce
      storageClassName: template-arch-lint-ssd
      resources:
        requests:
          storage: 5Gi