apiVersion: v1
kind: ServiceAccount
metadata:
  name: template-arch-lint
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    description: "Service account for template-arch-lint application"
automountServiceAccountToken: false  # Security best practice

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: template-arch-lint
  name: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: template-arch-lint
rules:
# Allow reading ConfigMaps (if application needs to reload config)
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["template-arch-lint-config"]

# Allow reading Secrets (if application needs to access secrets)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["template-arch-lint-secrets"]

# Allow creating events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

# Allow health check endpoint access
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
  resourceNames: ["template-arch-lint"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: template-arch-lint
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: template-arch-lint
subjects:
- kind: ServiceAccount
  name: template-arch-lint
  namespace: template-arch-lint
roleRef:
  kind: Role
  name: template-arch-lint
  apiGroup: rbac.authorization.k8s.io