apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: template-arch-lint
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    # Nginx Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "20"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-minute: "100"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';";
    
    # Certificate manager (if using cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Health check configuration
    nginx.ingress.kubernetes.io/health-check-path: "/health/ready"
    nginx.ingress.kubernetes.io/health-check-method: "GET"
    nginx.ingress.kubernetes.io/health-check-status: "200"
    
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - template-arch-lint.example.com
    - api.template-arch-lint.example.com
    secretName: template-arch-lint-tls
  rules:
  - host: template-arch-lint.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: template-arch-lint
            port:
              name: http
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: template-arch-lint
            port:
              name: http
      - path: /version
        pathType: Exact
        backend:
          service:
            name: template-arch-lint
            port:
              name: http
  - host: api.template-arch-lint.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: template-arch-lint
            port:
              name: http

---
# Ingress for metrics (internal access only)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: template-arch-lint-metrics
  namespace: template-arch-lint
  labels:
    app.kubernetes.io/name: template-arch-lint
    app.kubernetes.io/instance: template-arch-lint
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: metrics-ingress
    app.kubernetes.io/part-of: template-arch-lint
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: template-arch-lint-metrics-auth
    nginx.ingress.kubernetes.io/auth-realm: "Metrics Access"
spec:
  ingressClassName: nginx
  rules:
  - host: metrics.template-arch-lint.internal
    http:
      paths:
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: template-arch-lint
            port:
              name: metrics